/*! *******************************************************************************************************
* Copyright (c) 2018-2019 K. Sz. Horvath
*
* All rights reserved
*
* \file renderer.h
*
* \brief 3D rendering routines
*
* \author K. Sz. Horvath
*
**********************************************************************************************************/

#ifndef RENDERER_H
#define RENDERER_H

//--------------------------------------------------------------------------------------------------------/
// Include files
//--------------------------------------------------------------------------------------------------------/


//--------------------------------------------------------------------------------------------------------/
// Definitions
//--------------------------------------------------------------------------------------------------------/


//--------------------------------------------------------------------------------------------------------/
// Types
//--------------------------------------------------------------------------------------------------------/
PACKED_TYPES_BEGIN

//! \brief Vector format used by the 3D engine
typedef PACKED_STRUCT struct
{
  Q15 x;
  Q15 y;
  Q15 z;
} S_VECTOR;

PACKED_TYPES_END

//! \brief Own degree definition: normed to 256
typedef U8 DEG;


//--------------------------------------------------------------------------------------------------------/
// Global variables
//--------------------------------------------------------------------------------------------------------/


//--------------------------------------------------------------------------------------------------------/
// Interface functions
//--------------------------------------------------------------------------------------------------------/
S_VECTOR Renderer_RotateX( S_VECTOR vect, DEG dPhi );
S_VECTOR Renderer_RotateY( S_VECTOR vect, DEG dPhi );
S_VECTOR Renderer_RotateZ( S_VECTOR vect, DEG dPhi );
S_VECTOR Renderer_Project( S_VECTOR vect, Q15 q15CameraDistZ, U8 u8Zoom );
S_VECTOR Renderer_ProjectFast( S_VECTOR vect );
void Renderer_RenderObject( const S_VECTOR asVertexes[], const U8 au8Edges[][2u], U8 u8OffsetX, U8 u8OffsetY, U32 u32NumberOfEdges );


#endif  // RENDERER_H

//-----------------------------------------------< EOF >--------------------------------------------------/
